/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary{display:block}audio, canvas, progress, video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden], template{display:none}a{background-color:transparent}a:active, a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b, strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub, sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code, kbd, pre, samp{font-family:monospace,monospace;font-size:1em}button, input, optgroup, select, textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button, select{text-transform:none}button, html input[type=button], input[type=reset], input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled], html input[disabled]{cursor:default}button::-moz-focus-inner, input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox], input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td, th{padding:0}.h1, .h2, .h3, .h4, .h5, h1, h2, h3, h4, h5{color:#a77748;font-family:Amaranth,Helvetica,Arial,sans-serif}.h1, h1{font-size:2.4em;margin:1.4em 0 1em;text-align:center}a, a:visited{text-decoration:none}.wrap{margin:0 auto;padding:0 5%}@media only screen and (min-width:25em){.wrap{max-width:25em;padding-left:0;padding-right:0}}.alert-error, .alert-help, .alert-info, .alert-success{margin:.7em;padding:.7em;border:1px solid}.alert-help{background:#ebe16f;border-color:#e8dc59}.alert-info{background:#d5edf8;border-color:#bfe4f4}.alert-error{border-color:#f8cdce}.alert-success{background:#e6efc2;border-color:#deeaae}.go-live_message{display:block;padding:2em 10%;text-align:center}.go-live_message p{font-family:Helvetica,Arial,sans-serif;font-weight:600;margin:0;text-transform:uppercase}.go-live_error{background-color:#fbe3e4}.go-live_error p{color:#f5b6b9}.go-live_notice{background-color:#d5edf8}.go-live_notice p{color:#7ec8e9}.btn, input[type=submit]{background-color:#a77748;border-color:#a77748 #8a633c #725131;border-style:solid;border-radius:.4em;border-width:1px;color:#fff;display:block;font-family:Amaranth,Helvetica,Arial,sans-serif;margin:.5em 0;padding:.4em 1em;text-align:center}.btn:focus, .btn:hover, input[type=submit]:focus, input[type=submit]:hover{background-color:#835e39}form{display:-webkit-flex;display:-ms-flexbox;display:flex;margin:2em 0;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;width:100%}input{display:inline-block;outline:none}input[type=email], input[type=password], input[type=text]{background-color:#fff;border:1px solid #a77748;border-radius:.4em;display:block;padding:.4em 1em;width:60%}input[type=submit]{display:block;margin:0;width:35%}@media only screen and (min-width:650px){img.alignleft{float:left;margin-right:2em}}@media only screen and (min-width:650px){img.alignleft, img.alignright{margin-bottom:1em;max-width:50%}img.alignright{float:right;margin-left:2em}}.bg-image{background-position:50%;background-size:cover;display:block;padding-bottom:50%}.bg-image--src{display:none}html{height:100%;position:relative;box-sizing:border-box}*, :after, :before{box-sizing:inherit}body{background-image:url(../images/img-tea-stain.png);background-position:100% 100%;background-repeat:no-repeat;color:#5c6b80;font-family:Helvetica,Arial,sans-serif;position:relative}img{max-width:100%}@media print{*{background:transparent!important;color:#000!important;text-shadow:none!important;-webkit-filter:none!important;filter:none!important;-ms-filter:none!important}a, a:visited{color:#444!important;text-decoration:underline}a:after, a:visited:after{content:" (" attr(href) ")"}a:visited abbr[title]:after, a abbr[title]:after{content:" (" attr(title) ")"}.ir a:after, a[href^="#"]:after, a[href^="javascript:"]:after{content:""}blockquote, pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img, tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2, h3, p{orphans:3;widows:3}h2, h3{page-break-after:avoid}.page-navigation, .respond-form, .sidebar, .wp-prev-next, nav{display:none}}
/*# sourceMappingURL=data:application/json;base64, */
